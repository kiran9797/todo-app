{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;;;;;;IC8B/D,wEAAmD;IACjD,qEAAI;IACF,yEAAgB;IAAA,uDAAS;IAAA,4DAAK;IAC9B,qEAAI;IAAA,uDAAK;IAAA,4DAAK;IACd,qEAAI;IACF,4EAAwF;IAAjF,uVAA2B;IAAlC,4DAAwF;IAE1F,4DAAK;IAEP,4DAAK;IAEP,4DAAQ;;;;IATY,0DAAS;IAAT,yEAAS;IACrB,0DAAK;IAAL,qEAAK;;ACzCV,MAAM,YAAY;IALzB;QAOC;4BACoB;QACb,UAAK,GAAG,EAAE,CAAC;KAuBlB;IAhBA;gCAC4B;IACrB,SAAS;QACf,IAAI,IAAI,CAAC,OAAO,IAAI,EAAE,EAAE;SACvB;aACI;YACJ,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAC9B,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;SAClB;IACF,CAAC;IAED;kCAC8B;IACvB,UAAU,CAAC,KAAK;QACtB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IAC7B,CAAC;;wEA1BW,YAAY;4FAAZ,YAAY;QDPzB,yEAAoB;QAClB,yEAEkH;QAChH,oEAAyB;QACzB,yEAAiC;QAC/B,6EACF;QAAA,4DAAM;QAGR,4DAAM;QAIN,yEAA2C;QACzC,oEAAoD;QACpD,yEAE8D;QAE5D,2EAAkG;QAA3F,iLAAqB;QAA5B,4DAAkG;QAElG,oEAAyB;QAEzB,6EAAkE;QAA1D,qIAAS,eAAW,IAAC;QAC3B,sEACF;QAAA,4DAAS;QACX,4DAAM;QAEN,qEAAoD;QAItD,4DAAM;QAEN,2EAA2C;QAC3C,6EAA+C;QAC7C,yEAAO;QACL,sEAAI;QACF,0EAAgB;QAAA,qEAAS;QAAA,4DAAK;QAC9B,0EAAgB;QAAA,sEAAU;QAAA,4DAAK;QAC/B,qEAAqB;QAEvB,4DAAK;QACP,4DAAQ;QACR,+GAWQ;QACV,4DAAQ;QACR,4DAAM;QAIR,4DAAM;;QA1CO,0DAAqB;QAArB,gFAAqB;QAyBT,2DAAU;QAAV,8EAAU;;;;;;;;;;;;;;AE5CnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACd;AAEG;;AAYxC,MAAM,SAAS;;kEAAT,SAAS;wFAAT,SAAS,cAFR,2DAAY;6FADb,EAAE,YAHJ;YACP,uEAAa,EAAC,0DAAW;SAC1B;mIAIU,SAAS,mBARlB,2DAAY,aAGZ,uEAAa,EAAC,0DAAW;;;;;;;;;;;;;;;;;;;ACXkB;AAGF;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<div class=\"header\">\n  <div class=\"row  justify-content-center\n\t\t\talign-items-center\"\n    style=\"height:80px; background-image: linear-gradient(to bottom right, rgb(186, 119, 192), rgb(180, 31, 173));\">\n    <div class=\"col-3\"></div>\n    <div class=\"col-6 text-light h2\">\n      TODO APPLICATION\n    </div>\n\n    \n  </div>\n  \n\n\n  <div class=\"row mt-1\" style=\"height:80px;\">\n    <div class=\"col-3 d-none col-md-3 d-md-block\"></div>\n    <div class=\"col-12 col-md-6  d-flex\n\t\t\t\t\tjustify-content-center align-items-center\n\t\t\t\t\ttext-light h3\" style=\"background-color: rgb(163, 163, 207);\">\n\n      <input [(ngModel)]=\"newTask\" type=\"text\" value=\"\" class=\"col-7 form-control\" style=\"width:300px;\">\n\n      <div class=\"col-1\"></div>\n\n      <button (click)=\"addToList()\" class=\"btn btn-light text-success \">\n        ADD TASK\n      </button>\n    </div>\n\n    <div class=\"col-3 d-none col-md-3 d-md-block\"></div>\n\n\n\n  </div>\n\n  <div class=\"my-custom-scrollbar scrollbar\">\n  <table class=\"table table-hover  container \"  >\n    <thead>\n      <tr>\n        <th scope=\"col\">Sl number</th>\n        <th scope=\"col\">Task to do</th>\n        <th scope=\"col\"></th>\n\n      </tr>\n    </thead>\n    <tbody *ngFor=\"let x of items; let index = index;\">\n      <tr>\n        <th scope=\"row\">{{index}}</th>\n        <td>{{x}}</td>\n        <td>\n          <input (click)=\"deleteTask(index)\" type=\"button\" value=\"Delete\" class=\" btn btn-danger\">\n          \n        </td>\n       \n      </tr>\n     \n    </tbody>\n  </table>\n  </div>\n\n\n\n</div>","import { Component } from '@angular/core';\n\n@Component({\n\tselector: 'app-root',\n\ttemplateUrl: './app.component.html',\n\tstyleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n\t/* An empty array that is responsible\n\tto add a division */\n\tpublic items = [];\n\n\t/* A two-way binding performed which\n\tpushes text on division */\n\tpublic newTask;\n\n\n\t/* When input is empty, it will\n\tnot create a new division */\n\tpublic addToList() {\n\t\tif (this.newTask == '') {\n\t\t}\n\t\telse {\n\t\t\tthis.items.push(this.newTask);\n\t\t\tthis.newTask = '';\n\t\t}\n\t}\n\n\t/* This function takes to input the\n\ttask, that has to be deleted*/\n\tpublic deleteTask(index) {\n\t\tthis.items.splice(index, 1);\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms'\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}